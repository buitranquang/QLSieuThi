
@{
    ViewBag.Title = "Add";
}
@using QuanLySieuThi.DTO;
<script src="~/static/js/validate_input.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="~/static/css/login.css" media="all">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<div class="container-fluid row">
    <div class="col-md-4 col-sm-12">
        <h3 class="text text-center text-info">Khởi tạo sự kiện</h3>
        <div id="Event">
            @using (Html.BeginForm("Save", "Event", FormMethod.Post, new { id = "form" }))
            {
                <div class="form-item">
                    <label>Mô tả: </label>
                    <input id="description" name="description" value="" type="text" placeholder="Nhập tên sự kiện" required/>
                    <span class="form-message text-danger"></span>
                </div>

                <div class="form-item">
                    <label>Ngày bắt đầu: </label>
                    <input id="startDate" name="startDate" value="" type="date" placeholder="Chọn ngày bắt đầu" required/>
                    <span class="form-message text-danger"></span>
                </div>
                <div class="form-item">
                    <label>Ngày kết thúc: </label>
                    <input id="endDate" name="endDate" value="" type="date" placeholder="Chọn ngày kết thúc" required/>
                    <span class="form-message text-danger"></span>
                </div>
                <div class="form-btn">
                    <button type="submit" id="saveEvent" disabled class="form-submit">Xác nhận</button>
                </div>
            }
        </div>
    </div>
    <div class="col-md-8 col-sm-12" style="overflow: auto; height: 300px;">
        <div id="details">
            <table class="table table-striped table-bordered dataTable" cellspacing="0" width="100%" role="grid" aria-describedby="dtBasicExample_info" style="width: 100%;">
                <thead>
                    <tr>
                        <td>Sản phẩm</td>
                        <td>Giá khuyến mãi</td>
                        <td>Giá gốc</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>

    <hr />
    <hr />
    <div class="col-md-4 col-sm-12">
        @using (Html.BeginForm("AddDetail", "Event", FormMethod.Post, new { id = "form-add" }))
        {
            <input value="" id="productID" name="ID" type="hidden" />
            <div class="form-item">
                <label>Mô tả: </label>
                <input id="name" name="name" value="" type="text" placeholder="Tên sản phẩm" readonly />
                <span class="form-message text-danger"></span>
            </div>
            <div class="form-item">
                <label>Giá gốc: </label>
                <input id="price" name="price" value="" type="text" placeholder="Giá gốc" readonly />
                <span class="form-message text-danger"></span>
            </div>
            <div class="form-item">
                <label>Giá khuyến mãi: </label>
                <input id="discount" name="discount" type="text" inputmode="decimal" pattern="^\d+(,\d{3})*(\.\d{1,2})?$" required />
                <span class="form-message text-danger"></span>
            </div>

            <div class="form-btn">
                <button type="submit" class="form-submit">Xác nhận</button>
            </div>
        }
    </div>
    <div class="col-md-8 col-sm-12" style="overflow: auto; height: 500px;">
        <div class="col-12">
            <table id="productsTable" class="table table-striped table-bordered dataTable" cellspacing="0" width="100%" role="grid" aria-describedby="dtBasicExample_info" style="width: 100%;">
                <thead>
                    <tr role="row">
                        <th class="th-sm sorting_asc" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Sản phẩm">
                            Sản phẩm
                        </th>
                        <th class="th-sm sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Giá">
                            Giá
                        </th>
                        <th class="th-sm sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Ảnh">
                            Ảnh
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Product product in ViewBag.Products)
                    {
                        <tr role="row" class="odd tr-@product.ID">
                            <td class="pName">@product.Name</td>
                            <td class="pPrice">
                                <script>
                                    var formattedPrice = "@String.Format("{0:C0}", product.UnitPrice)".replaceAll("Rp", "").replaceAll("$", "");
                                    document.write(formattedPrice);
                                </script>
                            </td>
                            <td>
                                <img width="50" height="50" class="rounded " src="@product.Image_Url" />
                            </td>
                            <td>
                                <button id="@product.ID" class="btn btn-outline-secondary btn-default">Thêm</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    Validator({
        form: '#form',
        formGroupSelector: '.form-item',
        errorSelector: '.form-message',
        rules: [
            Validator.isRequired('#description', "Vui lòng mô tả sự kiện !"),
            Validator.isRequired('#startDate', "Vui lòng chọn ngày bắt đầu !"),
            Validator.isRequired('#endDate', "Vui lòng chọn ngày kết thúc !")
        ]
    })
    Validator({
        form: '#form-add',
        formGroupSelector: '.form-item',
        errorSelector: '.form-message',
        rules: [
            Validator.isRequired('#discount', "Nhập tiền giảm giá"),
            Validator.isDiscountPrice('#discount', '#price', "Vui lòng nhập đúng giá")
        ],
        onSubmit: function (data) {
            const form = document.getElementById("form-add");
            const formData = new FormData(form)
            fetch('@Url.Action("AddDetail", "Event")', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    console.log(response)
                    return response.json()
                })
                .then(data => {
                    let tableBody = document.querySelector("#details tbody");
                    let newRow = `
                            <tr product-id='${data.pID}'>
                                <td>${data.productName}</td>
                                <td>${data.discount}</td>
                                <td>${data.origin}</td>
                                <td><button class="btn btn-danger" onclick="deleteDetail(event)">Xóa</button></td>
                            </tr>`;
                   
                    // Add the new row to the table body
                    tableBody.innerHTML += newRow;
                    tableBody = document.querySelector("#details tbody");
                    if (tableBody.childElementCount > 0)
                        document.getElementById("saveEvent").disabled = false;
                    //disable btn và clear text
                    document.querySelector(`#productsTable tbody tr.tr-${data.pID}`).querySelector("button").disabled = true;
                    document.querySelector("#name").value = '';
                    document.querySelector("#productID").value = '';
                    document.querySelector("#discount").value = '';
                    document.querySelector(`#price`).value = '';

                })
                .catch(error => {
                    console.log("fetch dữ liệu thất bại");
                });
        }
    })
</script>
<script>
    document.querySelectorAll("table#productsTable button").forEach(e => e.addEventListener("click", mapToForm));
    function mapToForm(evt) {
        let name = document.querySelector("#name");
        let id = document.querySelector("#productID");
        let discount = document.querySelector("#discount");
        let price = document.querySelector('#price');
        let tr = document.querySelector(`#productsTable tbody .tr-${evt.target.id}`);

        id.value = evt.target.id;
        name.value = tr.querySelector(".pName").innerText;
        price.value = tr.querySelector(".pPrice").innerText;
        discount.focus();
    }

    function deleteDetail(event) {
        console.log(event)
        let tr = event.target.closest("tr");
        console.log(tr.getAttribute('product-id'))
        fetch(`@Url.Action("DeleteDetail", "Event")`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ productID: tr.getAttribute('product-id') })
        }).then(response => {
            console.log(response)
            return response.json();
        }).then(data => {
            console.log(data);
            let tableBody = document.querySelector("#details tbody");
            let tr = tableBody.querySelector(`tr[product-id='${data.pID}']`);
            tableBody.removeChild(tr);
            if (tableBody.childElementCount == 0)
                document.getElementById("saveEvent").disabled = true;

            let trProduct = document.querySelector(`#productsTable tbody tr.tr-${data.pID}`);
            trProduct.querySelector("button").disabled = false;
            console.log(tr)
        })
            .catch(error => console.log(error));

    }
</script>
